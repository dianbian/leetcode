class Solution {
public:
    vector<vector<int>> insert(vector<vector<int>>& intervals, vector<int>& newInterval) {
    vector<vector<int>> merged;
    int i = 0;
    int n = intervals.size();
    
    // 添加所有结束时间小于新区间开始时间的区间
    while (i < n && intervals[i][1] < newInterval[0]) {
        merged.push_back(intervals[i]);
        i++;
    }
    
    // 合并重叠区间
    while (i < n && intervals[i][0] <= newInterval[1]) {
        newInterval[0] = min(newInterval[0], intervals[i][0]);
        newInterval[1] = max(newInterval[1], intervals[i][1]);
        i++;
    }
    merged.push_back(newInterval);
    
    // 添加剩余区间
    while (i < n) {
        merged.push_back(intervals[i]);
        i++;
    }
    
    return merged;
}
};
