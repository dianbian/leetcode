class Solution {
public:
    int lengthOfLongestSubstring(string s) {
        int sSize = s.size();
        vector<string> sets;
        for (int i = 0; i < sSize; i++) {
            for (int j = 0; j < sSize - i;) {
                sets.push_back(s.substr(j, i));
                j = j + i;
            }
        }
        
        map<string, int> setOneMore;
        for (auto e : sets) {
            if (s.find(e)) {
                auto it = setOneMore.find(e);
                if (it == setOneMore.end()) {
                    setOneMore.insert(make_pair(e, 1));
                } else {
                    it->second++;
                }
            }
        }
        if (setOneMore.size() == 1) {
            return 1;
        }
        int max = 0;
        for (auto it = setOneMore.begin(); it != setOneMore.end(); ++it) {
            if (it->second > max) {
                max = it->second;
            }
        }
        return max;
    }
};
