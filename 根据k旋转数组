/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* rotateRight(ListNode* head, int k) {
        if (head == NULL || head->next == NULL) {
            return head;
        }
        int size = 0;
        ListNode* m = head;
        while(m != NULL) {
            size++;
            m = m->next;
        }
        int l = k;
        if (k > size) {
            l = k % size;
        }
        for(int i = 0; i < l; i++) {
            ListNode* p = head;
            ListNode* q = head;
            while(q->next->next != NULL) {
                q = q->next;
            }
            q->next->next = head;
            head = q->next;
            q->next = NULL;
        }
        return head;
    }
};
